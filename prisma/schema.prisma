generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String          @unique
  image         String
  token         String
  courses       Course[]        @relation("UserCourses")
  videoProgress VideoProgress[]
}

model Register {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  mobileNo  Int
  email     String
  age       Int
  place     String
  date      DateTime @default(now())
}

model Course {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  from          DateTime     @default(now())
  to            DateTime     @default(now())
  by            String[]
  createdate    DateTime     @default(now())
  user          User         @relation("UserCourses", fields: [userId], references: [id])
  userId        String       @db.ObjectId
  videos        Video[]
  courseUsers   CourseUsers? @relation("CourseCourseUsers", fields: [courseUsersId], references: [id])
  courseUsersId String?      @db.ObjectId
}

model Video {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  vimeoId     String          @unique
  dayNumber   Int
  course      Course          @relation(fields: [courseId], references: [id])
  courseId    String          @db.ObjectId
  progress    VideoProgress[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model VideoProgress {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  video       Video    @relation(fields: [videoId], references: [id])
  videoId     String   @db.ObjectId
  progress    Float    @default(0)
  completed   Boolean  @default(false)
  lastWatched DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, videoId])
}

model CourseUsers {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String
  courses Course[] @relation("CourseCourseUsers")
}

model SevenDaysProgramUser {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  whatsapp   Int
  age        Int
  amountPaid Int
  date       DateTime? @default(now())
}

model PersonalCounsellingUser {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  whatsapp   Int
  age        Int
  amountPaid Int
  date       DateTime? @default(now())
}
